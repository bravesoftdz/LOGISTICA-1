unit UProdutos;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, Vcl.StdCtrls, Vcl.Buttons,
  Vcl.ExtCtrls, Vcl.Grids, Vcl.DBGrids, Vcl.DBCtrls;

type
  TFProdutos = class(TForm)
    LblLocalizarUsuarios: TLabel;
    EdtLocalizarProdutos: TEdit;
    G1Grid: TDBGrid;
    PainelUsuarios1: TPanel;
    PainelUsuarios2: TPanel;
    BtnIncluir: TBitBtn;
    BtnAlterar: TBitBtn;
    BtnExcluir: TBitBtn;
    BtnSair: TButton;
    lkCbxFornecedor: TDBLookupComboBox;
    lblFornecedor: TLabel;
    btnAdicionar: TBitBtn;
    cbxCompravenda: TComboBox;
    SpeedButton1: TSpeedButton;
    procedure BtnSairClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure BtnIncluirClick(Sender: TObject);
    procedure EdtLocalizarProdutosChange(Sender: TObject);
    procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure BtnAlterarClick(Sender: TObject);
    procedure BtnExcluirClick(Sender: TObject);
    procedure G1GridDblClick(Sender: TObject);
    procedure lkCbxFornecedorClick(Sender: TObject);
    procedure EdtLocalizarProdutosKeyPress(Sender: TObject; var Key: Char);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure btnAdicionarClick(Sender: TObject);
    procedure lkCbxTipoProdutoClick(Sender: TObject);
    procedure SpeedButton1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    idprod : Integer;
  end;

var
  FProdutos: TFProdutos;

implementation

{$R *.dfm}

uses UDM, UCadProduto, UCadItens;{units que podem ser acessadas e utilizadas}

procedure TFProdutos.FormClose(Sender: TObject; var Action: TCloseAction);
begin

  Close;
end;

procedure TFProdutos.FormCreate(Sender: TObject);
begin
  {dm.cdsProdutos.Close;
  dm.cdsProdutos.Open; }

  dm.sql_produto.Close;
  DM.sql_produto.IsEmpty;
  dm.sql_produto.Open;

  dm.sql_pessoa2.Close;
  DM.sql_pessoa2.IsEmpty;
  dm.sql_pessoa2.Open;





end;

procedure TFProdutos.FormKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
    if key=VK_ESCAPE then //se a tecla ESC for pressionada então
    Close;
end;

procedure TFProdutos.G1GridDblClick(Sender: TObject);
begin
  BtnAlterar.Click;
end;

procedure TFProdutos.lkCbxFornecedorClick(Sender: TObject);
begin
  begin
    DM.sql_produto.Close;
    DM.sql_produto.SQL.Clear;
    DM.sql_produto.SQL.Add ('select * from produtos');
    DM.sql_produto.SQL.Add('where id_pessoa_prod = :idpessoaprod ');
    DM.sql_produto.ParamByName('idpessoaprod').AsInteger := DM.sql_pessoa2ID_PESSOA.AsInteger;
    DM.sql_produto.Open;
  end;
end;

procedure TFProdutos.lkCbxTipoProdutoClick(Sender: TObject);
begin
  begin
    DM.sql_produto.Close;
    DM.sql_produto.SQL.Clear;
    DM.sql_produto.SQL.Add ('select * from produtos');
    DM.sql_produto.SQL.Add('where tipo_produto = :tipoproduto ');
    DM.sql_produto.ParamByName('tipoproduto').AsString := cbxCompravenda.Text;
    DM.sql_produto.Open;
    end;
end;
procedure TFProdutos.SpeedButton1Click(Sender: TObject);
begin
  if (lkCbxFornecedor.Text <> '') and (cbxCompravenda.Text = '') then
  begin
     begin
    DM.sql_produto.Close;
    DM.sql_produto.SQL.Clear;
    DM.sql_produto.SQL.Add ('select * from produtos');
    DM.sql_produto.SQL.Add('where id_pessoa_prod = :idpessoaprod ');
    DM.sql_produto.ParamByName('idpessoaprod').AsInteger := DM.sql_pessoa2ID_PESSOA.AsInteger;
    DM.sql_produto.Open;
     end;
  end;

 if (lkCbxFornecedor.Text = '') and (cbxCompravenda.Text = 'Compra') or (cbxCompravenda.Text = 'Venda') then
 begin
   DM.sql_produto.Close;
   DM.sql_produto.SQL.Clear;
   DM.sql_produto.SQL.Add ('select * from produtos');
   DM.sql_produto.SQL.Add('where tipo_produto = :tipoproduto ');
   DM.sql_produto.ParamByName('tipoproduto').AsString := cbxCompravenda.Text;
   DM.sql_produto.Open;
 end;

 if (lkCbxFornecedor.Text <> '') and (cbxCompravenda.Text <> '')  then
 begin
   DM.sql_produto.Close;
    DM.sql_produto.SQL.Clear;
    DM.sql_produto.SQL.Add ('select * from produtos');
    DM.sql_produto.SQL.Add('where id_pessoa_prod = :idpessoaprod and tipo_produto = :tipoproduto ');
    DM.sql_produto.ParamByName('idpessoaprod').AsInteger := DM.sql_pessoa2ID_PESSOA.AsInteger;
    DM.sql_produto.ParamByName('tipoproduto').AsString := cbxCompravenda.Text;
    if DM.sql_produto.RecordCount = 0 then
    begin
      DM.sql_produto.Close;
      DM.sql_produto.SQL.Clear;
      DM.sql_produto.SQL.Add ('select * from produtos');
      DM.sql_produto.SQL.Add('where tipo_produto = :tipoproduto ');
      DM.sql_produto.ParamByName('tipoproduto').AsString := cbxCompravenda.Text;
      DM.sql_produto.Open;
    end
    else
    begin
      DM.sql_produto.Open;
    end;

 end;

end;

procedure TFProdutos.btnAdicionarClick(Sender: TObject);
begin
  idprod := DM.sql_produtoID_PRODUTO.AsInteger;
  Close;
  btnAdicionar.ModalResult:= mrOk;
end;

procedure TFProdutos.BtnAlterarClick(Sender: TObject);
begin
  {if not dm.cdsProdutos.IsEmpty then                //se não estiver vazio então
  begin                                             //inicie
  Self.Visible:=False;                              //esconde formulario UUsuario
  dm.cdsProdutos.Edit;

  dm.CriarFormulario(TFCadProduto,FCadProduto);     //criar form
  Self.Visible:=True;                               //mostrar formulario UUsuario
  end; }

  if not DM.sql_produto.IsEmpty then
  begin
  Self.Visible :=False;
  DM.sql_produto.Edit;
  dm.CriarFormulario(TFCadProduto,FCadProduto);
  Self.Visible:=True;
  end;


end;

procedure TFProdutos.BtnExcluirClick(Sender: TObject);
begin
    {if not dm.cdsProdutos.IsEmpty then                  //se não estiver vazio então
    begin                                             //inicie
        if MessageDlg('Confirmar a Exclusão',mtInformation,[mbYes,mbNo],0)=mrYes  then
     //se ao informar a mensagem 'Confirmar a Exclusão' for igual a Yes então
        begin                                         //inicie
            dm.cdsProdutos.Delete;                    //delete o registro na tabela usuario
            dm.cdsProdutos.ApplyUpdates(0);           //aplicar modificações na tabela
            ShowMessage('Informações Excluídas com Sucesso!'); //exibir mensagem
        end;                                          //fimse

    end; }

    if not dm.sql_produto.IsEmpty then
    begin
        if dm.MessageDlgDefault('Confirmar a Exclusão',mtInformation,[mbYes,mbNo],0)=mrYes  then
      //se ao informar a mensagem 'Confirmar a Exclusão' for igual a Yes então
        begin
            dm.sql_produto.Delete;
            ShowMessage('Informações Excluídas com Sucesso!');
        end;

    end;


end;

procedure TFProdutos.BtnIncluirClick(Sender: TObject);//incluir produto
begin                                                 //inicie
    {Self.Visible :=False;                             //esconde formulario UProduto
    dm.cdsProdutos.Append;                            //acrescentar em uma nova linha
    dm.cdsProdutosQUANTIDADE.AsFloat:=0;              //campo QUANTIDADE iniciar com 0
    dm.cdsProdutosVALOR.AsFloat:=0;                   //campo VALOR iniciar com 0
    dm.cdsProdutosTIPO.AsString:='T';                 //campo TIPO iniciar com T
    dm.CriarFormulario(TFCadProduto,FCadProduto);     //chamar procedimento para criar/abrir formulario UCadUProduto
    Self.Visible:=True;  }                             //mostrar formulario UProduto

    //Firebird
  Self.Visible :=False;
  DM.sql_produto.Active := True;
  DM.sql_produto.Insert;
  dm.CriarFormulario(TFCadProduto,FCadProduto);
  Self.Visible:=True;





end;

procedure TFProdutos.BtnSairClick(Sender: TObject);//clique botão sair
begin

  Close;

end;                                               //fim

procedure TFProdutos.EdtLocalizarProdutosChange(Sender: TObject);//pesquisa de produtos
begin                                                            //inicie
  //if EdtLocalizarProdutos.Text<> '' then                      //se a busca no Localizar for diferente de vazio então

  //acesse a tabela, localize o campo NOME no BD,e procure pelo texto que esta escrito no edtlocalizar,
  //[loPartialkey= localiza pela primeira letra ] [loCaseInsensitive=case sensitive]
  {dm.cdsProdutos.Locate('NOME',EdtLocalizarProdutos.Text,[loPartialKey,loCaseInsensitive]); }


  //Firebird
  if EdtLocalizarProdutos.Text<> '' then
  begin
  DM.sql_produto.Close;
  DM.sql_produto.Open;
  dm.sql_produto.Locate('NOME_PRODUTO',EdtLocalizarProdutos.Text,[loPartialKey,loCaseInsensitive]);

  end;

  if EdtLocalizarProdutos.Text= '%%' then
  begin
    DM.sql_produto.Close;
    DM.sql_produto.SQL.Clear;
    DM.sql_produto.SQL.Add ('select * from produtos');
    DM.sql_produto.Open;
  end;
end;



procedure TFProdutos.EdtLocalizarProdutosKeyPress(Sender: TObject;
  var Key: Char);
begin
  if Key = #13 then
  begin
   if EdtLocalizarProdutos.Text<> '' then
  begin
  dm.sql_produto.Locate('NOME_PRODUTO',EdtLocalizarProdutos.Text,[loPartialKey,loCaseInsensitive]);
  end;

  if EdtLocalizarProdutos.Text= '%%' then
  begin
    DM.sql_produto.Close;
    DM.sql_produto.SQL.Clear;
    DM.sql_produto.SQL.Add ('select * from produtos');
    DM.sql_produto.Open;
  end;
  end;
end;

end.
