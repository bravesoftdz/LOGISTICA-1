unit UCadProduto;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.Bind.EngExt, Vcl.Bind.DBEngExt,
  System.Rtti, System.Bindings.Outputs, Vcl.Bind.Editors, Data.Bind.Components,
  Data.Bind.DBScope, Data.DB, Vcl.StdCtrls, Vcl.ExtCtrls, Vcl.Mask, Vcl.DBCtrls;

type
  TFCadProduto = class(TForm)
    Label1: TLabel;
    LblQtd: TLabel;
    Panel1: TPanel;
    Panel2: TPanel;
    BtnCancelar: TButton;
    BtnSalvar: TButton;
    DsProdutos: TDataSource;
    EdtNome: TDBEdit;
    EdtQtd: TDBEdit;
    CbTipo: TComboBox;
    LblTipo: TLabel;
    LblValor: TLabel;
    EdtValor: TDBEdit;
    DBLookupComboBox1: TDBLookupComboBox;
    LblFornecedor: TLabel;
    DsPessoas: TDataSource;
    procedure BtnCancelarClick(Sender: TObject);
    procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure BtnSalvarClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FCadProduto: TFCadProduto;

implementation

{$R *.dfm}

uses UDM;

procedure TFCadProduto.BtnCancelarClick(Sender: TObject);
begin
    dm.cdsProdutos.Cancel;
    Close;
end;

procedure TFCadProduto.BtnSalvarClick(Sender: TObject);
begin
    if EdtNome.Text = '' then                         //se o produto estiver vazio então
     begin                                            //inicie
         ShowMessage('Produto não Informado!');       //exibir menssagem
         EdtNome.SetFocus;                            //logo após exibir a msg voltat o foco do mouse para EdtLogin

                                                      //e sair, para não executar o próximo bloco de instrução

         Exit
     end;

                                              //validando senha
     if EdtQtd.Text = '' then               //se a senha estiver vazia
     begin                                    //inicie
         ShowMessage('Quantidade não Informada!'); //exibir msg
         EdtQtd.SetFocus;                   //setar foco do mouse no campo senha
                                              //sair para não executar o próximo bloco de instrução
         Exit
     end;                                     //fim

      if EdtValor.Text = 0 then               //se a senha estiver vazia
     begin                                    //inicie
         ShowMessage('Valor não Informada!'); //exibir msg
         EdtQtd.SetFocus;                   //setar foco do mouse no campo senha
                                              //sair para não executar o próximo bloco de instrução
         Exit
     end;


      if dm.cdsProdutos.State=dsInsert then                    //se o estado for igual a INSERT então
     begin                                                     //inicie
        dm.QryIdProduto.Close;                                 //fechar query
        dm.QryIdProduto.Open;                                  //abrir query
        dm.cdsProdutosNOME.AsString:=EdtNome.Text;           //quero que o campo login no BD seja igual ao login do campo edtlogin
        dm.cdsProdutosQUANTIDADE.AsInteger:=StrToInt(EdtQtd.Text);//quero que a senha no BD seja igual a senha do campo edtsenha
     end;                                                      //fim
        dm.cdsProdutos.Post;                                   //postar
        dm.cdsProdutos.ApplyUpdates(0);                        //aplicar modificações
        ShowMessage('Informações Armazenadas com sucesso!');   //exibir mensagem
        dm.cdsProdutos.Refresh;                                //atualizar cdsusuarios
        Close;




end;

procedure TFCadProduto.FormKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
    if key=VK_ESCAPE then                                                 //se a tecla ESC for pressionada então
    BtnCancelar.Click;
end;

end.
